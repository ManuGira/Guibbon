name: Tk4Cv2 Tests

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  tests:
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os: ['windows-latest', 'ubuntu-latest']
        python-version: ['3.10', '3.7']
    runs-on: ${{ matrix.os }}

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install -r requirements_ci.txt
          python -m pip install -e .

      - name: Type check with mypy (only for windows and python 3.10)
        if: ${{ matrix.python-version == '3.10' && matrix.os == 'windows-latest' }}
        run: |
          python -m mypy .

      - name: Lint check with ruff (only for windows and python 3.10)
        if: ${{ matrix.python-version == '3.10' && matrix.os == 'windows-latest' }}
        run: |
          python -m ruff check .

      - name: Tests with pytest
        run: |
          if ${{ matrix.os == 'ubuntu-latest' }}
          then
            echo "Create virtual display to avoid tk/tcl errors on ubuntu"
            export DISPLAY=:99 
            Xvfb :99 &  
          fi
          python -m pytest
